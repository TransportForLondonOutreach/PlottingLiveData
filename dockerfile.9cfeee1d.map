{"version":3,"sources":["node_modules\\monaco-editor\\esm\\vs\\basic-languages\\dockerfile\\dockerfile.js"],"names":["conf","open","close","language","include","token","next"],"mappings":";AAIA,aAsBO,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IArBA,IAAIA,EAAO,QAAA,KAAA,CACJ,SAAA,CACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,MAEQ,iBAAA,CACd,CAAEC,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAMC,MAAO,MAEP,iBAAA,CACd,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAMC,MAAO,OAGlBC,EAAW,QAAA,SAAA,CACJ,aAAA,GACA,aAAA,cACA,aAAA,oHACI,iBAAA,UACH,cAAA,MACL,SAAA,cACC,UAAA,CACD,KAAA,CACF,CAAEC,QAAS,eACX,CAAEA,QAAS,YACX,CAAC,2BAA4B,CAAC,UAAW,CAAEC,MAAO,GAAIC,KAAM,mBAC5D,CAAC,GAAI,UAAW,kBAEN,aAAA,CACV,CAAC,+BAAgC,CAAC,UAAW,GAAI,CAAED,MAAO,WAAYC,KAAM,gBAC5E,CAAC,kBAAmB,UAAW,eAExB,UAAA,CACP,CAAEF,QAAS,eACX,CAAEA,QAAS,YACX,CAAC,cAAe,CACD,MAAA,CACK,OAAA,CAAEC,MAAO,WAAYC,KAAM,WACvB,WAAA,cAGxB,CAAC,KAAM,CACQ,MAAA,CACK,OAAA,GACI,WAAA,MAGxB,CAAC,IAAK,CACS,MAAA,CACK,OAAA,CAAED,MAAO,GAAIC,KAAM,WACf,WAAA,OAKhB,WAAA,CACR,CAAC,MAAO,CACO,MAAA,CACK,OAAA,CAAED,MAAO,GAAIC,KAAM,WACf,WAAA,OAInB,QAAA,CACL,CAAC,UAAW,UAAW,YAGlB,QAAA,CACL,CAAC,KAAM,SAAU,WACjB,CAAC,IAAK,SAAU,eAChB,CAAC,KAAM,SAAU,WACjB,CAAC,IAAK,SAAU,mBAER,WAAA,CACR,CAAC,WAAY,CACE,MAAA,CACK,OAAA,CAAED,MAAO,SAAUC,KAAM,WACrB,WAAA,YAGxB,CAAC,MAAO,iBACR,CAAC,KAAM,SAAU,WACjB,CAAC,IAAK,SAAU,QAChB,CAAC,cAAe,YAChB,CAAC,MAAO,UACR,CAAC,IAAK,SAAU,YAEL,cAAA,CACX,CAAC,WAAY,CACE,MAAA,CACK,OAAA,CAAED,MAAO,SAAUC,KAAM,WACrB,WAAA,YAGxB,CAAC,MAAO,iBACR,CAAC,KAAM,SAAU,WACjB,CAAC,IAAK,SAAU,QAChB,CAAC,cAAe,YAChB,CAAC,MAAO,UACR,CAAC,IAAK,SAAU","file":"dockerfile.9cfeee1d.map","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.dockerfile',\n    instructions: /FROM|MAINTAINER|RUN|EXPOSE|ENV|ADD|ARG|VOLUME|LABEL|USER|WORKDIR|COPY|CMD|STOPSIGNAL|SHELL|HEALTHCHECK|ENTRYPOINT/,\n    instructionAfter: /ONBUILD/,\n    variableAfter: /ENV/,\n    variable: /\\${?[\\w]+}?/,\n    tokenizer: {\n        root: [\n            { include: '@whitespace' },\n            { include: '@comment' },\n            [/(@instructionAfter)(\\s+)/, ['keyword', { token: '', next: '@instructions' }]],\n            ['', 'keyword', '@instructions']\n        ],\n        instructions: [\n            [/(@variableAfter)(\\s+)([\\w]+)/, ['keyword', '', { token: 'variable', next: '@arguments' }]],\n            [/(@instructions)/, 'keyword', '@arguments']\n        ],\n        arguments: [\n            { include: '@whitespace' },\n            { include: '@strings' },\n            [/(@variable)/, {\n                    cases: {\n                        '@eos': { token: 'variable', next: '@popall' },\n                        '@default': 'variable'\n                    }\n                }],\n            [/\\\\/, {\n                    cases: {\n                        '@eos': '',\n                        '@default': ''\n                    }\n                }],\n            [/./, {\n                    cases: {\n                        '@eos': { token: '', next: '@popall' },\n                        '@default': ''\n                    }\n                }],\n        ],\n        // Deal with white space, including comments\n        whitespace: [\n            [/\\s+/, {\n                    cases: {\n                        '@eos': { token: '', next: '@popall' },\n                        '@default': ''\n                    }\n                }],\n        ],\n        comment: [\n            [/(^#.*$)/, 'comment', '@popall']\n        ],\n        // Recognize strings, including those broken across lines with \\ (but not without)\n        strings: [\n            [/'$/, 'string', '@popall'],\n            [/'/, 'string', '@stringBody'],\n            [/\"$/, 'string', '@popall'],\n            [/\"/, 'string', '@dblStringBody']\n        ],\n        stringBody: [\n            [/[^\\\\\\$']/, {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }],\n            [/\\\\./, 'string.escape'],\n            [/'$/, 'string', '@popall'],\n            [/'/, 'string', '@pop'],\n            [/(@variable)/, 'variable'],\n            [/\\\\$/, 'string'],\n            [/$/, 'string', '@popall']\n        ],\n        dblStringBody: [\n            [/[^\\\\\\$\"]/, {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }],\n            [/\\\\./, 'string.escape'],\n            [/\"$/, 'string', '@popall'],\n            [/\"/, 'string', '@pop'],\n            [/(@variable)/, 'variable'],\n            [/\\\\$/, 'string'],\n            [/$/, 'string', '@popall']\n        ]\n    }\n};\n"]}