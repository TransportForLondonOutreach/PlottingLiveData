{"version":3,"sources":["node_modules\\monaco-editor\\esm\\vs\\basic-languages\\scheme\\scheme.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","ignoreCase","tokenPostfix","token","keywords","constants","operators","tokenizer","root","include","cases","comment","whitespace","strings","multiLineString"],"mappings":"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","file":"scheme.e9feb4b2.map","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: ';',\n        blockComment: ['#|', '|#'],\n    },\n    brackets: [['(', ')'], ['{', '}'], ['[', ']']],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n    ],\n};\nexport var language = {\n    defaultToken: '',\n    ignoreCase: true,\n    tokenPostfix: '.scheme',\n    brackets: [\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' },\n    ],\n    keywords: [\n        'case',\n        'do',\n        'let',\n        'loop',\n        'if',\n        'else',\n        'when',\n        'cons',\n        'car',\n        'cdr',\n        'cond',\n        'lambda',\n        'lambda*',\n        'syntax-rules',\n        'format',\n        'set!',\n        'quote',\n        'eval',\n        'append',\n        'list',\n        'list?',\n        'member?',\n        'load',\n    ],\n    constants: ['#t', '#f'],\n    operators: ['eq?', 'eqv?', 'equal?', 'and', 'or', 'not', 'null?'],\n    tokenizer: {\n        root: [\n            [/#[xXoObB][0-9a-fA-F]+/, 'number.hex'],\n            [/[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?/, 'number.float'],\n            [\n                /(?:\\b(?:(define|define-syntax|define-macro))\\b)(\\s+)((?:\\w|\\-|\\!|\\?)*)/,\n                ['keyword', 'white', 'variable'],\n            ],\n            { include: '@whitespace' },\n            { include: '@strings' },\n            [\n                /[a-zA-Z_#][a-zA-Z0-9_\\-\\?\\!\\*]*/,\n                {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@constants': 'constant',\n                        '@operators': 'operators',\n                        '@default': 'identifier',\n                    },\n                },\n            ],\n        ],\n        comment: [\n            [/[^\\|#]+/, 'comment'],\n            [/#\\|/, 'comment', '@push'],\n            [/\\|#/, 'comment', '@pop'],\n            [/[\\|#]/, 'comment'],\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/#\\|/, 'comment', '@comment'],\n            [/;.*$/, 'comment'],\n        ],\n        strings: [\n            [/\"$/, 'string', '@popall'],\n            [/\"(?=.)/, 'string', '@multiLineString'],\n        ],\n        multiLineString: [\n            [/\\\\./, 'string.escape'],\n            [/\"/, 'string', '@popall'],\n            [/.(?=.*\")/, 'string'],\n            [/.*\\\\$/, 'string'],\n            [/.*$/, 'string', '@popall'],\n        ],\n    },\n};\n"]}