{"version":3,"sources":["node_modules\\monaco-editor\\esm\\vs\\basic-languages\\shell\\shell.js"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","ignoreCase","tokenPostfix","token","keywords","builtins","symbols","tokenizer","root","include","cases","whitespace","numbers","strings","stringBody","dblStringBody","heredoc","parameters","parameterBody"],"mappings":"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","file":"shell.aa67bf3f.map","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '#',\n    },\n    brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" },\n        { open: '`', close: '`' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" },\n        { open: '`', close: '`' },\n    ],\n};\nexport var language = {\n    defaultToken: '',\n    ignoreCase: true,\n    tokenPostfix: '.shell',\n    brackets: [\n        { token: 'delimiter.bracket', open: '{', close: '}' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        { token: 'delimiter.square', open: '[', close: ']' },\n    ],\n    keywords: [\n        'if',\n        'then',\n        'do',\n        'else',\n        'elif',\n        'while',\n        'until',\n        'for',\n        'in',\n        'esac',\n        'fi',\n        'fin',\n        'fil',\n        'done',\n        'exit',\n        'set',\n        'unset',\n        'export',\n        'function',\n    ],\n    builtins: [\n        'ab',\n        'awk',\n        'bash',\n        'beep',\n        'cat',\n        'cc',\n        'cd',\n        'chown',\n        'chmod',\n        'chroot',\n        'clear',\n        'cp',\n        'curl',\n        'cut',\n        'diff',\n        'echo',\n        'find',\n        'gawk',\n        'gcc',\n        'get',\n        'git',\n        'grep',\n        'hg',\n        'kill',\n        'killall',\n        'ln',\n        'ls',\n        'make',\n        'mkdir',\n        'openssl',\n        'mv',\n        'nc',\n        'node',\n        'npm',\n        'ping',\n        'ps',\n        'restart',\n        'rm',\n        'rmdir',\n        'sed',\n        'service',\n        'sh',\n        'shopt',\n        'shred',\n        'source',\n        'sort',\n        'sleep',\n        'ssh',\n        'start',\n        'stop',\n        'su',\n        'sudo',\n        'svn',\n        'tee',\n        'telnet',\n        'top',\n        'touch',\n        'vi',\n        'vim',\n        'wall',\n        'wc',\n        'wget',\n        'who',\n        'write',\n        'yes',\n        'zsh',\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            { include: '@whitespace' },\n            [\n                /[a-zA-Z]\\w*/,\n                {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@builtins': 'type.identifier',\n                        '@default': ''\n                    },\n                },\n            ],\n            { include: '@strings' },\n            { include: '@parameters' },\n            { include: '@heredoc' },\n            [/[{}\\[\\]()]/, '@brackets'],\n            [/-+\\w+/, 'attribute.name'],\n            [/@symbols/, 'delimiter'],\n            { include: '@numbers' },\n            [/[,;]/, 'delimiter'],\n        ],\n        whitespace: [\n            [/\\s+/, 'white'],\n            [/(^#!.*$)/, 'metatag'],\n            [/(^#.*$)/, 'comment'],\n        ],\n        numbers: [\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\n            [/\\d+/, 'number'],\n        ],\n        // Recognize strings, including those broken across lines\n        strings: [\n            [/'/, 'string', '@stringBody'],\n            [/\"/, 'string', '@dblStringBody']\n        ],\n        stringBody: [\n            [/'/, 'string', '@popall'],\n            [/./, 'string'],\n        ],\n        dblStringBody: [\n            [/\"/, 'string', '@popall'],\n            [/./, 'string'],\n        ],\n        heredoc: [\n            [/(<<[-<]?)(\\s*)(['\"`]?)([\\w\\-]+)(['\"`]?)/, ['constants', 'white', 'string.heredoc.delimiter', 'string.heredoc', 'string.heredoc.delimiter']]\n        ],\n        parameters: [\n            [/\\$\\d+/, 'variable.predefined'],\n            [/\\$\\w+/, 'variable'],\n            [/\\$[*@#?\\-$!0_]/, 'variable'],\n            [/\\$['\"{(]/, 'variable', '@parameterBody']\n        ],\n        parameterBody: [\n            [/[#:%*@\\-!_]/, 'delimiter'],\n            [/['\"{(]/, 'variable', '@pop'],\n            [/./, 'variable']\n        ],\n    }\n};\n"]}