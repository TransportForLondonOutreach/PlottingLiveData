{"version":3,"sources":["node_modules\\monaco-editor\\esm\\vs\\basic-languages\\scss\\scss.js"],"names":["conf","open","close","notIn","RegExp","language","token","include","next","switchTo"],"mappings":"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","file":"scss.5dbc4ca4.map","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@$#!.:]?[\\w-?]+%?)|[@#!.]/g,\n    comments: {\n        blockComment: ['/*', '*/'],\n        lineComment: '//'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\n            end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.scss',\n    ws: '[ \\t\\n\\r\\f]*',\n    identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.bracket' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '<', close: '>', token: 'delimiter.angle' }\n    ],\n    tokenizer: {\n        root: [\n            { include: '@selector' },\n        ],\n        selector: [\n            { include: '@comments' },\n            { include: '@import' },\n            { include: '@variabledeclaration' },\n            { include: '@warndebug' },\n            ['[@](include)', { token: 'keyword', next: '@includedeclaration' }],\n            ['[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)', { token: 'keyword', next: '@keyframedeclaration' }],\n            ['[@](page|content|font-face|-moz-document)', { token: 'keyword' }],\n            ['[@](charset|namespace)', { token: 'keyword', next: '@declarationbody' }],\n            ['[@](function)', { token: 'keyword', next: '@functiondeclaration' }],\n            ['[@](mixin)', { token: 'keyword', next: '@mixindeclaration' }],\n            ['url(\\\\-prefix)?\\\\(', { token: 'meta', next: '@urldeclaration' }],\n            { include: '@controlstatement' },\n            { include: '@selectorname' },\n            ['[&\\\\*]', 'tag'],\n            ['[>\\\\+,]', 'delimiter'],\n            ['\\\\[', { token: 'delimiter.bracket', next: '@selectorattribute' }],\n            ['{', { token: 'delimiter.curly', next: '@selectorbody' }],\n        ],\n        selectorbody: [\n            ['[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))', 'attribute.name', '@rulevalue'],\n            { include: '@selector' },\n            ['[@](extend)', { token: 'keyword', next: '@extendbody' }],\n            ['[@](return)', { token: 'keyword', next: '@declarationbody' }],\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\n        ],\n        selectorname: [\n            ['#{', { token: 'meta', next: '@variableinterpolation' }],\n            ['(\\\\.|#(?=[^{])|%|(@identifier)|:)+', 'tag'],\n        ],\n        selectorattribute: [\n            { include: '@term' },\n            [']', { token: 'delimiter.bracket', next: '@pop' }],\n        ],\n        term: [\n            { include: '@comments' },\n            ['url(\\\\-prefix)?\\\\(', { token: 'meta', next: '@urldeclaration' }],\n            { include: '@functioninvocation' },\n            { include: '@numbers' },\n            { include: '@strings' },\n            { include: '@variablereference' },\n            ['(and\\\\b|or\\\\b|not\\\\b)', 'operator'],\n            { include: '@name' },\n            ['([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])', 'operator'],\n            [',', 'delimiter'],\n            ['!default', 'literal'],\n            ['\\\\(', { token: 'delimiter.parenthesis', next: '@parenthizedterm' }],\n        ],\n        rulevalue: [\n            { include: '@term' },\n            ['!important', 'literal'],\n            [';', 'delimiter', '@pop'],\n            ['{', { token: 'delimiter.curly', switchTo: '@nestedproperty' }],\n            ['(?=})', { token: '', next: '@pop' }],\n        ],\n        nestedproperty: [\n            ['[*_]?@identifier@ws:', 'attribute.name', '@rulevalue'],\n            { include: '@comments' },\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\n        ],\n        warndebug: [\n            ['[@](warn|debug)', { token: 'keyword', next: '@declarationbody' }],\n        ],\n        import: [\n            ['[@](import)', { token: 'keyword', next: '@declarationbody' }],\n        ],\n        variabledeclaration: [\n            ['\\\\$@identifier@ws:', 'variable.decl', '@declarationbody'],\n        ],\n        urldeclaration: [\n            { include: '@strings' },\n            ['[^)\\r\\n]+', 'string'],\n            ['\\\\)', { token: 'meta', next: '@pop' }],\n        ],\n        parenthizedterm: [\n            { include: '@term' },\n            ['\\\\)', { token: 'delimiter.parenthesis', next: '@pop' }],\n        ],\n        declarationbody: [\n            { include: '@term' },\n            [';', 'delimiter', '@pop'],\n            ['(?=})', { token: '', next: '@pop' }],\n        ],\n        extendbody: [\n            { include: '@selectorname' },\n            ['!optional', 'literal'],\n            [';', 'delimiter', '@pop'],\n            ['(?=})', { token: '', next: '@pop' }],\n        ],\n        variablereference: [\n            ['\\\\$@identifier', 'variable.ref'],\n            ['\\\\.\\\\.\\\\.', 'operator'],\n            ['#{', { token: 'meta', next: '@variableinterpolation' }],\n        ],\n        variableinterpolation: [\n            { include: '@variablereference' },\n            ['}', { token: 'meta', next: '@pop' }],\n        ],\n        comments: [\n            ['\\\\/\\\\*', 'comment', '@comment'],\n            ['\\\\/\\\\/+.*', 'comment'],\n        ],\n        comment: [\n            ['\\\\*\\\\/', 'comment', '@pop'],\n            ['.', 'comment'],\n        ],\n        name: [\n            ['@identifier', 'attribute.value'],\n        ],\n        numbers: [\n            ['(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?', { token: 'number', next: '@units' }],\n            ['#[0-9a-fA-F_]+(?!\\\\w)', 'number.hex'],\n        ],\n        units: [\n            ['(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?', 'number', '@pop']\n        ],\n        functiondeclaration: [\n            ['@identifier@ws\\\\(', { token: 'meta', next: '@parameterdeclaration' }],\n            ['{', { token: 'delimiter.curly', switchTo: '@functionbody' }],\n        ],\n        mixindeclaration: [\n            // mixin with parameters\n            ['@identifier@ws\\\\(', { token: 'meta', next: '@parameterdeclaration' }],\n            // mixin without parameters\n            ['@identifier', 'meta'],\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }],\n        ],\n        parameterdeclaration: [\n            ['\\\\$@identifier@ws:', 'variable.decl'],\n            ['\\\\.\\\\.\\\\.', 'operator'],\n            [',', 'delimiter'],\n            { include: '@term' },\n            ['\\\\)', { token: 'meta', next: '@pop' }],\n        ],\n        includedeclaration: [\n            { include: '@functioninvocation' },\n            ['@identifier', 'meta'],\n            [';', 'delimiter', '@pop'],\n            ['(?=})', { token: '', next: '@pop' }],\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }],\n        ],\n        keyframedeclaration: [\n            ['@identifier', 'meta'],\n            ['{', { token: 'delimiter.curly', switchTo: '@keyframebody' }],\n        ],\n        keyframebody: [\n            { include: '@term' },\n            ['{', { token: 'delimiter.curly', next: '@selectorbody' }],\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\n        ],\n        controlstatement: [\n            ['[@](if|else|for|while|each|media)', { token: 'keyword.flow', next: '@controlstatementdeclaration' }],\n        ],\n        controlstatementdeclaration: [\n            ['(in|from|through|if|to)\\\\b', { token: 'keyword.flow' }],\n            { include: '@term' },\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }],\n        ],\n        functionbody: [\n            ['[@](return)', { token: 'keyword' }],\n            { include: '@variabledeclaration' },\n            { include: '@term' },\n            { include: '@controlstatement' },\n            [';', 'delimiter'],\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\n        ],\n        functioninvocation: [\n            ['@identifier\\\\(', { token: 'meta', next: '@functionarguments' }],\n        ],\n        functionarguments: [\n            ['\\\\$@identifier@ws:', 'attribute.name'],\n            ['[,]', 'delimiter'],\n            { include: '@term' },\n            ['\\\\)', { token: 'meta', next: '@pop' }],\n        ],\n        strings: [\n            ['~?\"', { token: 'string.delimiter', next: '@stringenddoublequote' }],\n            ['~?\\'', { token: 'string.delimiter', next: '@stringendquote' }]\n        ],\n        stringenddoublequote: [\n            ['\\\\\\\\.', 'string'],\n            ['\"', { token: 'string.delimiter', next: '@pop' }],\n            ['.', 'string']\n        ],\n        stringendquote: [\n            ['\\\\\\\\.', 'string'],\n            ['\\'', { token: 'string.delimiter', next: '@pop' }],\n            ['.', 'string']\n        ]\n    }\n};\n"]}