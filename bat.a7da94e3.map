{"version":3,"sources":["node_modules\\monaco-editor\\esm\\vs\\basic-languages\\bat\\bat.js"],"names":["conf","open","close","RegExp","language","token","next"],"mappings":";AAIA,aA4BO,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA3BA,IAAIA,EAAO,QAAA,KAAA,CACJ,SAAA,CACO,YAAA,OAEP,SAAA,CACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,MAEQ,iBAAA,CACd,CAAEC,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,MAEN,iBAAA,CACd,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,MAEf,QAAA,CACI,QAAA,CACE,MAAA,IAAIC,OAAO,gCACb,IAAA,IAAIA,OAAO,sCAIjBC,EAAW,QAAA,SAAA,CACJ,aAAA,GACF,YAAA,EACE,aAAA,OACJ,SAAA,CACN,CAAEC,MAAO,oBAAqBJ,KAAM,IAAKC,MAAO,KAChD,CAAEG,MAAO,wBAAyBJ,KAAM,IAAKC,MAAO,KACpD,CAAEG,MAAO,mBAAoBJ,KAAM,IAAKC,MAAO,MAEzC,SAAA,4FAED,QAAA,0BACA,QAAA,wEAEE,UAAA,CACD,KAAA,CACF,CAAC,wBAAyB,CAAC,GAAI,YAC/B,CAAC,yBAA0B,CAAC,CAAEG,MAAO,WAAa,CAAEA,MAAO,gBAE1D,CAAA,aAAc,IAEd,CAAA,iBAAkB,wBACnB,CAAC,iBAAkB,wBAElB,CAAA,eAAgB,IAEhB,CAAA,OAAQ,WAER,CAAA,UAAW,YACZ,CAAC,gBAAiB,YAEjB,CAAA,aAAc,aACf,CAAC,WAAY,aAEZ,CAAA,2BAA4B,gBAC7B,CAAC,gCAAiC,cAClC,CAAC,MAAO,UAEP,CAAA,QAAS,aAET,CAAA,IAAK,SAAU,aAChB,CAAC,IAAK,SAAU,cAEZ,OAAA,CACJ,CAAC,YAAa,CACC,MAAA,CACK,OAAA,CAAEA,MAAO,SAAUC,KAAM,WACrB,WAAA,YAGxB,CAAC,WAAY,iBACb,CAAC,MAAO,yBACR,CAAC,WAAY,YACb,CAAC,gBAAiB,YAClB,CAAC,OAAQ,CACM,MAAA,CACQ,UAAA,CAAED,MAAO,SAAUC,KAAM,QACxB,WAAA,YAGxB,CAAC,IAAK,SAAU","file":"bat.a7da94e3.map","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: 'REM'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n    ],\n    surroundingPairs: [\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*(::\\\\s*|REM\\\\s+)#region\"),\n            end: new RegExp(\"^\\\\s*(::\\\\s*|REM\\\\s+)#endregion\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    ignoreCase: true,\n    tokenPostfix: '.bat',\n    brackets: [\n        { token: 'delimiter.bracket', open: '{', close: '}' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        { token: 'delimiter.square', open: '[', close: ']' }\n    ],\n    keywords: /call|defined|echo|errorlevel|exist|for|goto|if|pause|set|shift|start|title|not|pushd|popd/,\n    // we include these common regular expressions\n    symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            [/^(\\s*)(rem(?:\\s.*|))$/, ['', 'comment']],\n            [/(\\@?)(@keywords)(?!\\w)/, [{ token: 'keyword' }, { token: 'keyword.$2' }]],\n            // whitespace\n            [/[ \\t\\r\\n]+/, ''],\n            // blocks\n            [/setlocal(?!\\w)/, 'keyword.tag-setlocal'],\n            [/endlocal(?!\\w)/, 'keyword.tag-setlocal'],\n            // words\n            [/[a-zA-Z_]\\w*/, ''],\n            // labels\n            [/:\\w*/, 'metatag'],\n            // variables\n            [/%[^%]+%/, 'variable'],\n            [/%%[\\w]+(?!\\w)/, 'variable'],\n            // punctuations\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, 'delimiter'],\n            // numbers\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\n            [/\\d+/, 'number'],\n            // punctuation: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings:\n            [/\"/, 'string', '@string.\"'],\n            [/'/, 'string', '@string.\\''],\n        ],\n        string: [\n            [/[^\\\\\"'%]+/, {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/%[\\w ]+%/, 'variable'],\n            [/%%[\\w]+(?!\\w)/, 'variable'],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }],\n            [/$/, 'string', '@popall']\n        ],\n    }\n};\n"]}