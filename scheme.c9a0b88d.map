{"version":3,"sources":["node_modules\\monaco-editor\\esm\\vs\\basic-languages\\scheme\\scheme.js"],"names":["conf","open","close","language","token","include"],"mappings":";AAIA,aAoBO,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAnBA,IAAIA,EAAO,QAAA,KAAA,CACJ,SAAA,CACO,YAAA,IACC,aAAA,CAAC,KAAM,OAEf,SAAA,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MACvB,iBAAA,CACd,CAAEC,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,MAEN,iBAAA,CACd,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,OAGjBC,EAAW,QAAA,SAAA,CACJ,aAAA,GACF,YAAA,EACE,aAAA,UACJ,SAAA,CACN,CAAEF,KAAM,IAAKC,MAAO,IAAKE,MAAO,yBAChC,CAAEH,KAAM,IAAKC,MAAO,IAAKE,MAAO,mBAChC,CAAEH,KAAM,IAAKC,MAAO,IAAKE,MAAO,qBAE1B,SAAA,CACN,OACA,KACA,MACA,OACA,KACA,OACA,OACA,OACA,MACA,MACA,OACA,SACA,UACA,eACA,SACA,OACA,QACA,OACA,SACA,OACA,QACA,UACA,QAEO,UAAA,CAAC,KAAM,MACP,UAAA,CAAC,MAAO,OAAQ,SAAU,MAAO,KAAM,MAAO,SAC9C,UAAA,CACD,KAAA,CACF,CAAC,wBAAyB,cAC1B,CAAC,2CAA4C,gBAC7C,CACI,yEACA,CAAC,UAAW,QAAS,aAEzB,CAAEC,QAAS,eACX,CAAEA,QAAS,YACX,CACI,kCACA,CACW,MAAA,CACU,YAAA,UACC,aAAA,WACA,aAAA,YACF,WAAA,iBAKnB,QAAA,CACL,CAAC,UAAW,WACZ,CAAC,MAAO,UAAW,SACnB,CAAC,MAAO,UAAW,QACnB,CAAC,QAAS,YAEF,WAAA,CACR,CAAC,aAAc,SACf,CAAC,MAAO,UAAW,YACnB,CAAC,OAAQ,YAEJ,QAAA,CACL,CAAC,KAAM,SAAU,WACjB,CAAC,SAAU,SAAU,qBAER,gBAAA,CACb,CAAC,MAAO,iBACR,CAAC,IAAK,SAAU,WAChB,CAAC,WAAY,UACb,CAAC,QAAS,UACV,CAAC,MAAO,SAAU","file":"scheme.c9a0b88d.map","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: ';',\n        blockComment: ['#|', '|#'],\n    },\n    brackets: [['(', ')'], ['{', '}'], ['[', ']']],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n    ],\n};\nexport var language = {\n    defaultToken: '',\n    ignoreCase: true,\n    tokenPostfix: '.scheme',\n    brackets: [\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' },\n    ],\n    keywords: [\n        'case',\n        'do',\n        'let',\n        'loop',\n        'if',\n        'else',\n        'when',\n        'cons',\n        'car',\n        'cdr',\n        'cond',\n        'lambda',\n        'lambda*',\n        'syntax-rules',\n        'format',\n        'set!',\n        'quote',\n        'eval',\n        'append',\n        'list',\n        'list?',\n        'member?',\n        'load',\n    ],\n    constants: ['#t', '#f'],\n    operators: ['eq?', 'eqv?', 'equal?', 'and', 'or', 'not', 'null?'],\n    tokenizer: {\n        root: [\n            [/#[xXoObB][0-9a-fA-F]+/, 'number.hex'],\n            [/[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?/, 'number.float'],\n            [\n                /(?:\\b(?:(define|define-syntax|define-macro))\\b)(\\s+)((?:\\w|\\-|\\!|\\?)*)/,\n                ['keyword', 'white', 'variable'],\n            ],\n            { include: '@whitespace' },\n            { include: '@strings' },\n            [\n                /[a-zA-Z_#][a-zA-Z0-9_\\-\\?\\!\\*]*/,\n                {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@constants': 'constant',\n                        '@operators': 'operators',\n                        '@default': 'identifier',\n                    },\n                },\n            ],\n        ],\n        comment: [\n            [/[^\\|#]+/, 'comment'],\n            [/#\\|/, 'comment', '@push'],\n            [/\\|#/, 'comment', '@pop'],\n            [/[\\|#]/, 'comment'],\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/#\\|/, 'comment', '@comment'],\n            [/;.*$/, 'comment'],\n        ],\n        strings: [\n            [/\"$/, 'string', '@popall'],\n            [/\"(?=.)/, 'string', '@multiLineString'],\n        ],\n        multiLineString: [\n            [/\\\\./, 'string.escape'],\n            [/\"/, 'string', '@popall'],\n            [/.(?=.*\")/, 'string'],\n            [/.*\\\\$/, 'string'],\n            [/.*$/, 'string', '@popall'],\n        ],\n    },\n};\n"]}